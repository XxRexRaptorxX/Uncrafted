// ========================================
// VERSION MANAGING TASKS
// ========================================

tasks.register("updateVersionFile") {
    group = "versioning"
    description = "Updates the versions.json file with current version"
    doLast { updateVersionJson() }
}

tasks.register("syncVersionFile") {
    group = "versioning"
    description = "Sync versions.json from main branch to current branch"
    doLast {
        try {
            def mainBranch = "main"
            def proc = "git rev-parse --verify main".execute()
            if (proc.waitFor() != 0) {
                proc = "git rev-parse --verify master".execute()
                if (proc.waitFor() == 0) {
                    mainBranch = "master"
                } else {
                    throw new GradleException("Neither 'main' nor 'master' branch found")
                }
            }

            proc = "git cat-file -e ${mainBranch}:versions.json".execute()
            if (proc.waitFor() == 0) {
                proc = "git show ${mainBranch}:versions.json".execute()
                def content = proc.text
                file("versions.json").text = content
                println "Successfully synced versions.json from ${mainBranch} branch"
            } else {
                println "Warning: versions.json not found in ${mainBranch} branch"
            }
        } catch (Exception e) {
            throw new GradleException("Failed to sync versions.json: ${e.message}")
        }
    }
}

def updateVersionJson() {
    def updateFile = file("versions.json")
    def currentVersion = mod_version
    def currentMcVersion = minecraft_version

    def jsonContent
    if (updateFile.exists()) {
        jsonContent = new groovy.json.JsonSlurper().parseText(updateFile.text)
    } else {
        jsonContent = [
                "homepage": "https://www.curseforge.com/members/xxrexraptorxx/projects",
                "promos": [:]
        ]
    }

    // Update mod version
    def latestKey = "${currentMcVersion}-latest"
    def recommendedKey = "${currentMcVersion}-recommended"

    jsonContent.promos[latestKey] = currentVersion
    jsonContent.promos[recommendedKey] = currentVersion

    // Update versions.json
    def jsonBuilder = new groovy.json.JsonBuilder(jsonContent)
    updateFile.text = jsonBuilder.toPrettyString()

    println "Updated versions.json:"
    println "  ${latestKey}: ${currentVersion}"
    println "  ${recommendedKey}: ${currentVersion}"
}